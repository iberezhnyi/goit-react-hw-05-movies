{"version":3,"file":"static/js/736.b0e16078.chunk.js","mappings":"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","sources":["api/api.js","api/fetchMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ACCESS_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzdlODZlMzdkODU4ZTMyMzQ4NzFmNmY5ZjA1ZDcwNiIsInN1YiI6IjY1OTNiYjk0ZTY0MGQ2N2Y0MGQ2OTZjYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._7mJ2kp5OrC3s16OXvB-SxM-uab1Y1UFJSFYt7tRN9g';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization: ACCESS_TOKEN,\n  },\n});\n\nexport default api;\n","import api from './api';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await api('trending/movie/day');\n\n  return data;\n};\n\nconst fetchQueryMovies = async (query, page = 1) => {\n  const { data } = await api('search/movie', {\n    params: { query: query, page: page },\n  });\n\n  return data;\n};\n\nconst fetchMovieDetail = async (movieId, filter = 'credits') => {\n  const { data } = await api(`movie/${movieId}`, {\n    params: { append_to_response: `${filter}` },\n  });\n\n  return data;\n};\n\nconst fetchMovies = { fetchPopularMovies, fetchQueryMovies, fetchMovieDetail };\n\nexport default fetchMovies;\n","import styled from 'styled-components';\n\nexport const CastStyled = styled.div`\n  display: block;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: -15px;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  width: calc((100% - 300px) / 10);\n  margin: 15px;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 12px;\n  margin-bottom: 5px;\n  font-weight: bold;\n`;\n\nexport const Character = styled.p`\n  font-size: 12px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport fetchMovies from 'api/fetchMovies';\nimport {\n  ActorName,\n  CastItem,\n  CastList,\n  CastStyled,\n  Character,\n} from './Cast.styled';\n\nconst { fetchMovieDetail } = fetchMovies;\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const { credits } = await fetchMovieDetail(movieId, 'credits');\n\n        setMovieCast(credits.cast);\n      } catch (error) {\n        console.log(error);\n        toast.error(`Something went wrong. ${error.message}`);\n        return;\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n\n  const imgDefaultUrl =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <CastStyled>\n      {movieCast?.length === 0 ? (\n        <p>There is no information</p>\n      ) : (\n        <CastList>\n          {movieCast?.map(({ credit_id, name, character, profile_path }) => (\n            <CastItem key={credit_id}>\n              {profile_path ? (\n                <img src={imgBaseUrl + profile_path} alt={name} />\n              ) : (\n                <img src={imgDefaultUrl} alt=\"Not found\" />\n              )}\n              <ActorName>{name}</ActorName>\n              <Character>\n                Character:\n                <br />\n                {character}\n              </Character>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </CastStyled>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","baseURL","headers","accept","Authorization","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$api","data","_context","prev","next","api","sent","abrupt","stop","apply","arguments","fetchQueryMovies","_ref2","_callee2","query","page","_yield$api2","_args2","_context2","length","undefined","params","_x","fetchMovieDetail","_ref3","_callee3","movieId","filter","_yield$api3","_args3","_context3","concat","append_to_response","_x2","CastStyled","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","ActorName","_templateObject4","Character","_templateObject5","fetchMovies","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useParams","useEffect","getMovieCast","_yield$fetchMovieDeta","credits","cast","t0","console","log","toast","message","_jsx","children","map","credit_id","name","character","profile_path","_jsxs","src","alt"],"sourceRoot":""}
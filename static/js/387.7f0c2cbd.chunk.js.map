{"version":3,"file":"static/js/387.7f0c2cbd.chunk.js","mappings":"qMAaA,E,OARYA,EAAAA,OAAa,CACvBC,QAAS,gCACTC,QAAS,CACPC,OAAQ,mBACRC,cANF,gOCDIC,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFC,EAAI,sBAAsB,KAAD,EAApC,OAAoCL,EAAAE,EAAAI,KAAxCL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SAELN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACZ,kBAJuB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAMlBC,EAAgB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAOC,GAAK,IAAAC,EAAAC,EAAAf,EAAAgB,EAAAP,UAAA,OAAAZ,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAAU,OAARW,EAAIE,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAd,KAAA,EACtBC,EAAI,eAAgB,CACzCgB,OAAQ,CAAEP,MAAOA,EAAOC,KAAMA,KAC7B,KAAD,EAFU,OAEVC,EAAAE,EAAAZ,KAFML,EAAIe,EAAJf,KAAIiB,EAAAX,OAAA,SAILN,GAAI,wBAAAiB,EAAAV,OAAA,GAAAK,EAAA,KACZ,gBANqBS,GAAA,OAAAV,EAAAH,MAAA,KAAAC,UAAA,KAQhBa,EAAgB,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAOC,GAAO,IAAAC,EAAAC,EAAA3B,EAAA4B,EAAAnB,UAAA,OAAAZ,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAAoB,OAAlBuB,EAAME,EAAAV,OAAA,QAAAC,IAAAS,EAAA,GAAAA,EAAA,GAAG,UAASC,EAAA1B,KAAA,EAClCC,EAAI,SAAD0B,OAAUL,GAAW,CAC7CL,OAAQ,CAAEW,mBAAmB,GAADD,OAAKJ,MAChC,KAAD,EAFU,OAEVC,EAAAE,EAAAxB,KAFML,EAAI2B,EAAJ3B,KAAI6B,EAAAvB,OAAA,SAILN,GAAI,wBAAA6B,EAAAtB,OAAA,GAAAiB,EAAA,KACZ,gBANqBQ,GAAA,OAAAT,EAAAf,MAAA,KAAAC,UAAA,KAUtB,EAFoB,CAAEf,mBAAAA,EAAoBgB,iBAAAA,EAAkBY,iBAAAA,E,6KCtB/CW,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAK1BC,EAAcH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAKvBG,EAAkBL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qDAK3BK,EAAeP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAIxBO,EAAaT,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qDAKxBS,EAAgBX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gH,SCb7Bd,EAAqByB,EAAAA,EAAAA,iBA6C7B,EA3CgB,WACd,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE1BzB,GAAY6B,EAAAA,EAAAA,MAAZ7B,QAiBR,OAfA8B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAA7D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA2D,EAAAC,EAAA,OAAA7D,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOmB,EAAiBG,EAAS,WAAW,KAAD,EAAAgC,EAAAxD,EAAAI,KAAtDqD,EAAOD,EAAPC,QAERL,EAAeK,EAAQC,SAAS1D,EAAAE,KAAA,gBAGsB,OAHtBF,EAAAC,KAAA,EAAAD,EAAA2D,GAAA3D,EAAA,SAEhC4D,QAAQC,IAAG7D,EAAA2D,IACXG,EAAAA,GAAAA,MAAY,yBAADjC,OAA0B7B,EAAA2D,GAAMI,UAAW/D,EAAAK,OAAA,mCAAAL,EAAAM,OAAA,GAAAT,EAAA,kBAGzD,kBAVmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWpB+C,GACF,GAAG,CAAC/B,KAGFwC,EAAAA,EAAAA,KAAChC,EAAa,CAAAiC,SACa,KAAb,OAAXd,QAAW,IAAXA,OAAW,EAAXA,EAAalC,SACZ+C,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAEHD,EAAAA,EAAAA,KAAC5B,EAAW,CAAA6B,SACE,OAAXd,QAAW,IAAXA,OAAW,EAAXA,EAAae,KAAI,SAAAxD,GAAA,IAAGyD,EAAEzD,EAAFyD,GAAIC,EAAM1D,EAAN0D,OAAQC,EAAU3D,EAAV2D,WAAYC,EAAO5D,EAAP4D,QAAO,OAClDC,EAAAA,EAAAA,MAACjC,EAAe,CAAA2B,SAAA,EACdD,EAAAA,EAAAA,KAACxB,EAAY,CAAAyB,SAAEG,KACfJ,EAAAA,EAAAA,KAAA,KAAAC,UACED,EAAAA,EAAAA,KAACtB,EAAU,CAAAuB,SACR,IAAIO,KAAKH,GAAYI,0BAG1BT,EAAAA,EAAAA,KAACpB,EAAa,CAAAqB,SAAEK,MAPIH,EAQJ,OAM9B,C","sources":["api/api.js","api/fetchMovies.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ACCESS_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzdlODZlMzdkODU4ZTMyMzQ4NzFmNmY5ZjA1ZDcwNiIsInN1YiI6IjY1OTNiYjk0ZTY0MGQ2N2Y0MGQ2OTZjYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._7mJ2kp5OrC3s16OXvB-SxM-uab1Y1UFJSFYt7tRN9g';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization: ACCESS_TOKEN,\n  },\n});\n\nexport default api;\n","import api from './api';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await api('trending/movie/day');\n\n  return data;\n};\n\nconst fetchQueryMovies = async (query, page = 1) => {\n  const { data } = await api('search/movie', {\n    params: { query: query, page: page },\n  });\n\n  return data;\n};\n\nconst fetchMovieDetail = async (movieId, filter = 'credits') => {\n  const { data } = await api(`movie/${movieId}`, {\n    params: { append_to_response: `${filter}` },\n  });\n\n  return data;\n};\n\nconst fetchMovies = { fetchPopularMovies, fetchQueryMovies, fetchMovieDetail };\n\nexport default fetchMovies;\n","import styled from 'styled-components';\n\nexport const ReviewsStyled = styled.div`\n  display: block;\n  padding-right: 10%;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: block;\n  padding: 0;\n`;\n\nexport const ReviewsListItem = styled.li`\n  display: block;\n  margin-bottom: 20px;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  display: block;\n`;\n\nexport const ReviewDate = styled.time`\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const ReviewContent = styled.p`\n  display: block;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #c6c6c6;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport fetchMovies from 'api/fetchMovies';\nimport {\n  ReviewAuthor,\n  ReviewContent,\n  ReviewDate,\n  ReviewsList,\n  ReviewsListItem,\n  ReviewsStyled,\n} from './Reviews.styled';\n\nconst { fetchMovieDetail } = fetchMovies;\n\nconst Reviews = () => {\n  const [movieReview, setMovieReview] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReview = async () => {\n      try {\n        const { reviews } = await fetchMovieDetail(movieId, 'reviews');\n\n        setMovieReview(reviews.results);\n      } catch (error) {\n        console.log(error);\n        toast.error(`Something went wrong. ${error.message}`);\n        return;\n      }\n    };\n    getMovieReview();\n  }, [movieId]);\n\n  return (\n    <ReviewsStyled>\n      {movieReview?.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ReviewsList>\n          {movieReview?.map(({ id, author, created_at, content }) => (\n            <ReviewsListItem key={id}>\n              <ReviewAuthor>{author}</ReviewAuthor>\n              <p>\n                <ReviewDate>\n                  {new Date(created_at).toLocaleDateString()}\n                </ReviewDate>\n              </p>\n              <ReviewContent>{content}</ReviewContent>\n            </ReviewsListItem>\n          ))}\n        </ReviewsList>\n      )}\n    </ReviewsStyled>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","baseURL","headers","accept","Authorization","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$api","data","_context","prev","next","api","sent","abrupt","stop","apply","arguments","fetchQueryMovies","_ref2","_callee2","query","page","_yield$api2","_args2","_context2","length","undefined","params","_x","fetchMovieDetail","_ref3","_callee3","movieId","filter","_yield$api3","_args3","_context3","concat","append_to_response","_x2","ReviewsStyled","styled","_templateObject","_taggedTemplateLiteral","ReviewsList","_templateObject2","ReviewsListItem","_templateObject3","ReviewAuthor","_templateObject4","ReviewDate","_templateObject5","ReviewContent","_templateObject6","fetchMovies","_useState","useState","_useState2","_slicedToArray","movieReview","setMovieReview","useParams","useEffect","getMovieReview","_yield$fetchMovieDeta","reviews","results","t0","console","log","toast","message","_jsx","children","map","id","author","created_at","content","_jsxs","Date","toLocaleDateString"],"sourceRoot":""}
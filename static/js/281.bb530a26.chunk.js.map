{"version":3,"file":"static/js/281.bb530a26.chunk.js","mappings":"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","sources":["api/api.js","api/fetchMovies.js","components/Button/Button.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Forms/SearchMovieForm.styled.jsx","components/Forms/SearchMovieForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ACCESS_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzdlODZlMzdkODU4ZTMyMzQ4NzFmNmY5ZjA1ZDcwNiIsInN1YiI6IjY1OTNiYjk0ZTY0MGQ2N2Y0MGQ2OTZjYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._7mJ2kp5OrC3s16OXvB-SxM-uab1Y1UFJSFYt7tRN9g';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    accept: 'application/json',\n    Authorization: ACCESS_TOKEN,\n  },\n});\n\nexport default api;\n","import api from './api';\n\nconst fetchPopularMovies = async () => {\n  const { data } = await api('trending/movie/day');\n\n  return data;\n};\n\nconst fetchQueryMovies = async (query, page = 1) => {\n  const { data } = await api('search/movie', {\n    params: { query: query, page: page },\n  });\n\n  return data;\n};\n\nconst fetchMovieDetail = async (movieId, filter = 'credits') => {\n  const { data } = await api(`movie/${movieId}`, {\n    params: { append_to_response: `${filter}` },\n  });\n\n  return data;\n};\n\nconst fetchMovies = { fetchPopularMovies, fetchQueryMovies, fetchMovieDetail };\n\nexport default fetchMovies;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  right: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 15px;\n  padding: 10px 10px 10px 10px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  fill: #ffffff;\n  background-color: grey;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1;\n\n  &:hover,\n  &:focus {\n    background-color: #616161;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyled = styled.ul`\n  padding: 20px 40px;\n  list-style: none;\n  line-height: 1.4;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  &::before {\n    content: '';\n    width: 8px;\n    height: 8px;\n    margin-right: 14px;\n    border-radius: 999px;\n    background-color: #000000;\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: 16px;\n  color: black;\n  &:hover,\n  &:focus {\n    text-decoration: underline #000000;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  LinkStyled,\n  MovieItem,\n  MovieName,\n  MoviesListStyled,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies, path = '' }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListStyled>\n      {movies?.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <LinkStyled to={`${path + id}`} state={{ from: location }}>\n            <MovieName>{title}</MovieName>\n          </LinkStyled>\n        </MovieItem>\n      ))}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  path: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: start;\n\n  height: 64px;\n  padding-right: 40px;\n  padding-left: 40px;\n\n  color: #fff;\n`;\n\nexport const SearchFormStyled = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 0;\n  margin-right: auto;\n  width: 450px;\n`;\n\nexport const InputStyled = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  padding-left: 16px;\n  padding-right: 48px;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: 0.03em;\n  color: #212121;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  filter: drop-shadow(0px 3px 3px rgba(0, 0, 0, 0.3));\n  border-radius: 3px;\n  background-color: #ffffff;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { ButtonStyled } from 'components/Button/Button.styled';\nimport {\n  FormContainer,\n  InputStyled,\n  SearchFormStyled,\n} from './SearchMovieForm.styled';\n\nconst SearchMovieForm = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchQuery(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const query = evt.target.query.value.trim();\n\n    if (query === '') {\n      toast.warn('Please enter valid movie name');\n      return;\n    }\n\n    // const nextSearchParams = query !== '' ? { query } : {};\n\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    const nextSearchQuery = searchParams.get('query') ?? '';\n\n    !searchQuery && setSearchQuery(nextSearchQuery);\n  }, [searchQuery, searchParams]);\n\n  return (\n    <FormContainer>\n      <SearchFormStyled onSubmit={handleSubmit}>\n        <ButtonStyled type=\"submit\">Search</ButtonStyled>\n\n        <InputStyled\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Movie name\"\n          onChange={handleChange}\n          value={searchQuery}\n        />\n      </SearchFormStyled>\n    </FormContainer>\n  );\n};\n\nexport default SearchMovieForm;\n","import styled from 'styled-components';\n\nexport const MoviesStyled = styled.main`\n  display: block;\n`;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport fetchMovies from 'api/fetchMovies';\nimport SearchMovieForm from 'components/Forms/SearchMovieForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { MoviesStyled } from './Movies.styled';\n\nconst { fetchQueryMovies } = fetchMovies;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n\n  const [searchParams] = useSearchParams();\n\n  const handleSubmit = useCallback(async query => {\n    try {\n      const { results } = await fetchQueryMovies(query);\n\n      setMovies(results);\n    } catch (error) {\n      console.log(error);\n      toast.error(`Something went wrong. ${error.message}`);\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    handleSubmit(query);\n  }, [handleSubmit, searchParams]);\n\n  return (\n    <MoviesStyled>\n      <SearchMovieForm />\n      {movies && <MoviesList movies={movies} />}\n    </MoviesStyled>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","baseURL","headers","accept","Authorization","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$api","data","_context","prev","next","api","sent","abrupt","stop","apply","arguments","fetchQueryMovies","_ref2","_callee2","query","page","_yield$api2","_args2","_context2","length","undefined","params","_x","fetchMovieDetail","_ref3","_callee3","movieId","filter","_yield$api3","_args3","_context3","concat","append_to_response","_x2","ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","MoviesListStyled","MovieItem","_templateObject2","MovieName","_templateObject3","LinkStyled","Link","_templateObject4","movies","_ref$path","path","location","useLocation","_jsx","children","map","id","title","to","state","from","FormContainer","SearchFormStyled","InputStyled","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","nextSearchQuery","get","_jsxs","onSubmit","evt","preventDefault","target","value","trim","toast","type","name","autoComplete","autoFocus","placeholder","onChange","MoviesStyled","fetchMovies","setMovies","handleSubmit","useCallback","_yield$fetchQueryMovi","results","t0","console","log","message","SearchMovieForm","MoviesList"],"sourceRoot":""}